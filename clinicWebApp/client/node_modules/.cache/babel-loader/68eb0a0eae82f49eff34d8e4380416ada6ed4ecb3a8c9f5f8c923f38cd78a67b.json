{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PatientDashboard=()=>{const[appointments,setAppointments]=useState([]);//const [patientId, setPatientId] = useState(0);\nconst[slotId,setSlotId]=useState(0);const[message,setMessage]=useState('');const userId=localStorage.getItem('userId');/*const fetchAppointments = async () => {\r\n    try {\r\n      const response = await fetch(`/api/patients/${userId}reservations`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed To Fetch Patient Appointments');\r\n      }\r\n      const data = await response.json();\r\n      setAppointments(data.reservations);\r\n    } catch (error) {\r\n      setMessage(error.message);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n  }, []);*/const bookAppointment=async()=>{try{const response=await fetch('/api/patients/bookappointment',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({patient_id:userId,slot_id:slotId})});const data=await response.json();if(!response.ok){throw new Error(data.message);}setAppointments(data.reservations);//fetchAppointments();\nsetMessage('Appointment Booked Successfully');}catch(error){setMessage(error.message);console.error(error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"patient-dashboard-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome Patient\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"My Appointments\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Appointment ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Doctor Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Start Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"End Time\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:appointments.map(appointment=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:appointment.appointment_id}),/*#__PURE__*/_jsx(\"td\",{children:appointment.doctor_name}),/*#__PURE__*/_jsx(\"td\",{children:appointment.date}),/*#__PURE__*/_jsx(\"td\",{children:appointment.start_time}),/*#__PURE__*/_jsx(\"td\",{children:appointment.end_time})]},appointment.appointment_id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"book-appointment-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Slot ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:slotId,onChange:e=>setSlotId(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:bookAppointment,children:\"Book Appointment\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:message})]});};export default PatientDashboard;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","PatientDashboard","appointments","setAppointments","slotId","setSlotId","message","setMessage","userId","localStorage","getItem","bookAppointment","response","fetch","method","headers","body","JSON","stringify","patient_id","slot_id","data","json","ok","Error","reservations","error","console","className","children","map","appointment","appointment_id","doctor_name","date","start_time","end_time","type","value","onChange","e","target","onClick"],"sources":["C:/Users/MAS/Documents/VScode/clinicWebApp/client/src/components/PatientDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst PatientDashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  //const [patientId, setPatientId] = useState(0);\r\n  const [slotId, setSlotId] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  /*const fetchAppointments = async () => {\r\n    try {\r\n      const response = await fetch(`/api/patients/${userId}reservations`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed To Fetch Patient Appointments');\r\n      }\r\n      const data = await response.json();\r\n      setAppointments(data.reservations);\r\n    } catch (error) {\r\n      setMessage(error.message);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n  }, []);*/\r\n\r\n  const bookAppointment = async () => {\r\n    try {\r\n      const response = await fetch('/api/patients/bookappointment', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          patient_id: userId,\r\n          slot_id: slotId\r\n        })\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message);\r\n      }\r\n      setAppointments(data.reservations);\r\n      //fetchAppointments();\r\n      setMessage('Appointment Booked Successfully');\r\n    } catch (error) {\r\n      setMessage(error.message);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"patient-dashboard-container\">\r\n      <h2>Welcome Patient</h2>\r\n      <h3>My Appointments</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Appointment ID</th>\r\n            <th>Doctor Name</th>\r\n            <th>Date</th>\r\n            <th>Start Time</th>\r\n            <th>End Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {appointments.map(appointment => (\r\n          <tr key={appointment.appointment_id}>\r\n            <td>{appointment.appointment_id}</td>\r\n            <td>{appointment.doctor_name}</td>\r\n            <td>{appointment.date}</td>\r\n            <td>{appointment.start_time}</td>\r\n            <td>{appointment.end_time}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n  <div className=\"book-appointment-container\">\r\n  <label>Slot ID:</label>\r\n    <input type=\"number\" value={slotId} onChange={(e) => setSlotId(e.target.value)} />\r\n    <button onClick={bookAppointment}>Book Appointment</button>\r\n  </div>\r\n  {message && <p className=\"error-message\">{message}</p>}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default PatientDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}