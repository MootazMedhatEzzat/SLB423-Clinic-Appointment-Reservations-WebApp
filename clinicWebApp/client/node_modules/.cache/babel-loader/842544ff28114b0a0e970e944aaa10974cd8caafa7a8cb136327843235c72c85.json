{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PatientDashboard=()=>{const[reservations,setReservations]=useState([]);const[message,setMessage]=useState('');const userId=localStorage.getItem('userId');const fetchPatientReservations=async userId=>{try{if(!userId){throw new Error('User ID not found in localStorage');}const response=await fetch(\"/api/patients/\".concat(userId,\"/reservations\"));const data=await response.json();if(!response.ok){throw new Error('Failed to fetch patient reservations');}setReservations(data.reservations);}catch(error){console.error(error);setMessage('Failed to fetch patient reservations');}};useEffect(()=>{fetchPatientReservations(userId);},[userId]);if(!userId){return/*#__PURE__*/_jsx(\"div\",{children:\"User ID not found. Please log in.\"});}if(message){return/*#__PURE__*/_jsx(\"div\",{children:message});}/*const fetchPatientReservations = async () => {\r\n    try {\r\n      const response = await fetch(`/api/patients/${userId}/reservations`);\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error('Failed To Fetch Patient Reservations');\r\n      }\r\n      setReservations(data.reservations);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Failed To Fetch Patient Reservations');\r\n    } \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchPatientReservations();\r\n  }, []);*/return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"My Appointments\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Appointment\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Doctor\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:reservations.map(reservation=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(reservation.slot_id.date,\" \").concat(reservation.slot_id.start_time,\" - \").concat(reservation.slot_id.end_time)}),/*#__PURE__*/_jsx(\"td\",{children:reservation.slot_id.doctor_id.name})]},reservation.slot_id.id))})]})]});};export default PatientDashboard;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","PatientDashboard","reservations","setReservations","message","setMessage","userId","localStorage","getItem","fetchPatientReservations","Error","response","fetch","concat","data","json","ok","error","console","children","map","reservation","slot_id","date","start_time","end_time","doctor_id","name","id"],"sources":["C:/Users/MAS/Documents/VScode/clinicWebApp/client/src/components/PatientDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst PatientDashboard = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  const fetchPatientReservations = async (userId) => {\r\n    try {\r\n      if (!userId) {\r\n        throw new Error('User ID not found in localStorage');\r\n      }\r\n      const response = await fetch(`/api/patients/${userId}/reservations`);\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch patient reservations');\r\n      }\r\n      setReservations(data.reservations);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Failed to fetch patient reservations');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPatientReservations(userId);\r\n  }, [userId]);\r\n\r\n  if (!userId) {\r\n    return <div>User ID not found. Please log in.</div>;\r\n  }\r\n\r\n  if (message) {\r\n    return <div>{message}</div>;\r\n  }\r\n\r\n  /*const fetchPatientReservations = async () => {\r\n    try {\r\n      const response = await fetch(`/api/patients/${userId}/reservations`);\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error('Failed To Fetch Patient Reservations');\r\n      }\r\n      setReservations(data.reservations);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Failed To Fetch Patient Reservations');\r\n    } \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchPatientReservations();\r\n  }, []);*/\r\n\r\n  return (\r\n    <div>\r\n      <h2>My Appointments</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Appointment</th>\r\n            <th>Doctor</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {reservations.map((reservation) => (\r\n            <tr key={reservation.slot_id.id}>\r\n              <td>\r\n                {`${reservation.slot_id.date} ${reservation.slot_id.start_time} - ${reservation.slot_id.end_time}`}\r\n              </td>\r\n              <td>{reservation.slot_id.doctor_id.name}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDashboard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAAW,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAE7C,KAAM,CAAAC,wBAAwB,CAAG,KAAO,CAAAH,MAAM,EAAK,CACjD,GAAI,CACF,GAAI,CAACA,MAAM,CAAE,CACX,KAAM,IAAI,CAAAI,KAAK,CAAC,mCAAmC,CAAC,CACtD,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,kBAAAC,MAAA,CAAkBP,MAAM,iBAAe,CAAC,CACpE,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAI,CAACJ,QAAQ,CAACK,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAN,KAAK,CAAC,sCAAsC,CAAC,CACzD,CACAP,eAAe,CAACW,IAAI,CAACZ,YAAY,CAAC,CACpC,CAAE,MAAOe,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACpBZ,UAAU,CAAC,sCAAsC,CAAC,CACpD,CACF,CAAC,CAEDT,SAAS,CAAC,IAAM,CACda,wBAAwB,CAACH,MAAM,CAAC,CAClC,CAAC,CAAE,CAACA,MAAM,CAAC,CAAC,CAEZ,GAAI,CAACA,MAAM,CAAE,CACX,mBAAOR,IAAA,QAAAqB,QAAA,CAAK,mCAAiC,CAAK,CAAC,CACrD,CAEA,GAAIf,OAAO,CAAE,CACX,mBAAON,IAAA,QAAAqB,QAAA,CAAMf,OAAO,CAAM,CAAC,CAC7B,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAEE,mBACEJ,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBnB,KAAA,UAAAmB,QAAA,eACErB,IAAA,UAAAqB,QAAA,cACEnB,KAAA,OAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBrB,IAAA,OAAAqB,QAAA,CAAI,QAAM,CAAI,CAAC,EACb,CAAC,CACA,CAAC,cACRrB,IAAA,UAAAqB,QAAA,CACGjB,YAAY,CAACkB,GAAG,CAAEC,WAAW,eAC5BrB,KAAA,OAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,IAAAN,MAAA,CACMQ,WAAW,CAACC,OAAO,CAACC,IAAI,MAAAV,MAAA,CAAIQ,WAAW,CAACC,OAAO,CAACE,UAAU,QAAAX,MAAA,CAAMQ,WAAW,CAACC,OAAO,CAACG,QAAQ,EAC9F,CAAC,cACL3B,IAAA,OAAAqB,QAAA,CAAKE,WAAW,CAACC,OAAO,CAACI,SAAS,CAACC,IAAI,CAAK,CAAC,GAJtCN,WAAW,CAACC,OAAO,CAACM,EAKzB,CACL,CAAC,CACG,CAAC,EACH,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAA3B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}