{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../css/DoctorDashboard.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const DoctorDashboard=()=>{const[slots,setSlots]=useState([]);const[date,setDate]=useState('');const[startTime,setStartTime]=useState('');const[endTime,setEndTime]=useState('');const[reservationsNum,setReservationsNum]=useState(0);const[slotIdToCancel,setSlotIdToCancel]=useState(0);const[message,setMessage]=useState('');const userId=localStorage.getItem('userId');const fetchDoctorSlots=async()=>{try{const response=await fetch(\"/api/doctors/slots/\".concat(userId));if(!response.ok){throw new Error('Failed to fetch doctor slots');}const data=await response.json();setSlots(data.slots);}catch(error){console.error(error);setMessage('Failed to fetch doctor slots');}};useEffect(()=>{fetchDoctorSlots();},[]);const addDoctorSlot=async()=>{try{const response=await fetch('/api/doctors/addslot',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({doctor_id:userId,date,start_time:startTime,end_time:endTime,reservations_num:reservationsNum})});const data=await response.json();if(!response.ok){throw new Error('Failed to add new slot');}setSlots(data.slots);fetchDoctorSlots();setMessage('Slot added successfully');}catch(error){setMessage('Failed to add slot');console.error(error);}};const cancelDoctorSlot=async()=>{try{const response=await fetch('/api/doctors/cancelslot',{method:'DELETE',headers:{'Content-Type':'application/json'},body:JSON.stringify({doctor_id:userId,slot_id:slotIdToCancel})});if(!response.ok){throw new Error('Failed to cancel slot');}fetchDoctorSlots();setMessage('Slot canceled successfully');}catch(error){setMessage('Failed to cancel slot');console.error(error);}};// Function to format the date in a more readable format\nconst formatDate=dateString=>{const date=new Date(dateString);const options={year:'numeric',month:'long',day:'numeric'};return date.toLocaleDateString('en-US',options);};return/*#__PURE__*/_jsxs(\"div\",{className:\"doctor-dashboard-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome Doctor\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Current Slots\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Start Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"End Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Reservations Number\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:slots.map(slot=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:slot.id}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(slot.date)}),/*#__PURE__*/_jsx(\"td\",{children:slot.start_time}),/*#__PURE__*/_jsx(\"td\",{children:slot.end_time}),/*#__PURE__*/_jsx(\"td\",{children:slot.reservations_num})]},slot.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-slot-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:date,onChange:e=>setDate(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"Start Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:startTime,onChange:e=>setStartTime(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"End Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:endTime,onChange:e=>setEndTime(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"Reservations Number:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:reservationsNum,onChange:e=>setReservationsNum(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:addDoctorSlot,children:\"Add Slot\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cancel-slot-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Slot ID to Cancel:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:slotIdToCancel,onChange:e=>setSlotIdToCancel(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:cancelDoctorSlot,children:\"Cancel Slot\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:message})]});};export default DoctorDashboard;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","DoctorDashboard","slots","setSlots","date","setDate","startTime","setStartTime","endTime","setEndTime","reservationsNum","setReservationsNum","slotIdToCancel","setSlotIdToCancel","message","setMessage","userId","localStorage","getItem","fetchDoctorSlots","response","fetch","concat","ok","Error","data","json","error","console","addDoctorSlot","method","headers","body","JSON","stringify","doctor_id","start_time","end_time","reservations_num","cancelDoctorSlot","slot_id","formatDate","dateString","Date","options","year","month","day","toLocaleDateString","className","children","map","slot","id","type","value","onChange","e","target","onClick"],"sources":["C:/Users/MAS/Documents/VScode/clinicWebApp/client/src/components/DoctorDashBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/DoctorDashboard.css';\r\n\r\nconst DoctorDashboard = () => {\r\n  const [slots, setSlots] = useState([]);\r\n  const [date, setDate] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [endTime, setEndTime] = useState('');\r\n  const [reservationsNum, setReservationsNum] = useState(0);\r\n  const [slotIdToCancel, setSlotIdToCancel] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  const fetchDoctorSlots = async () => {\r\n    try {\r\n      const response = await fetch(`/api/doctors/slots/${userId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch doctor slots');\r\n      }\r\n      const data = await response.json();\r\n      setSlots(data.slots);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Failed to fetch doctor slots');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDoctorSlots();\r\n  }, []);\r\n\r\n  const addDoctorSlot = async () => {\r\n    try {\r\n      const response = await fetch('/api/doctors/addslot', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          doctor_id: userId,\r\n          date,\r\n          start_time: startTime,\r\n          end_time: endTime,\r\n          reservations_num: reservationsNum,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add new slot');\r\n      }\r\n      setSlots(data.slots);\r\n      fetchDoctorSlots();\r\n      setMessage('Slot added successfully');\r\n    } catch (error) {\r\n      setMessage('Failed to add slot');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const cancelDoctorSlot = async () => {\r\n    try {\r\n      const response = await fetch('/api/doctors/cancelslot', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          doctor_id: userId,\r\n          slot_id: slotIdToCancel,\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to cancel slot');\r\n      }\r\n      fetchDoctorSlots();\r\n      setMessage('Slot canceled successfully');\r\n    } catch (error) {\r\n      setMessage('Failed to cancel slot');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Function to format the date in a more readable format\r\n  const formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n  return date.toLocaleDateString('en-US', options);\r\n};\r\n\r\n  return (\r\n    <div className=\"doctor-dashboard-container\">\r\n      <h2>Welcome Doctor</h2>\r\n      <h3>Current Slots</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Date</th>\r\n            <th>Start Time</th>\r\n            <th>End Time</th>\r\n            <th>Reservations Number</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slots.map((slot) => (\r\n            <tr key={slot.id}>\r\n              <td>{slot.id}</td>\r\n              <td>{formatDate(slot.date)}</td>\r\n              <td>{slot.start_time}</td>\r\n              <td>{slot.end_time}</td>\r\n              <td>{slot.reservations_num}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"add-slot-container\">\r\n        <label>Date:</label>\r\n        <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n        <label>Start Time:</label>\r\n        <input type=\"time\" value={startTime} onChange={(e) => setStartTime(e.target.value)} />\r\n        <label>End Time:</label>\r\n        <input type=\"time\" value={endTime} onChange={(e) => setEndTime(e.target.value)} />\r\n        <label>Reservations Number:</label>\r\n        <input type=\"number\" value={reservationsNum} onChange={(e) => setReservationsNum(e.target.value)} />\r\n        <button onClick={addDoctorSlot}>Add Slot</button>\r\n      </div>\r\n      <div className=\"cancel-slot-container\">\r\n        <label>Slot ID to Cancel:</label>\r\n        <input type=\"number\" value={slotIdToCancel} onChange={(e) => setSlotIdToCancel(e.target.value)} />\r\n        <button onClick={cancelDoctorSlot}>Cancel Slot</button>\r\n      </div>\r\n      {message && <p className=\"error-message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}