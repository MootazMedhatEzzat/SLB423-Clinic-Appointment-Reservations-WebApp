{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PatientDashboard=()=>{const[reservations,setReservations]=useState([]);const[appointmentSlot,setAppointmentSlot]=useState(0);const[message,setMessage]=useState('');const userId=localStorage.getItem('userId');/*const fetchPatientReservations = async () => {\r\n    try {\r\n      const response = await fetch(`/api/patients/${userId}/reservations`);\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error('Failed To Fetch Patient Reservations');\r\n      }\r\n      setReservations(data.reservations);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Failed To Fetch Patient Reservations');\r\n    } \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchPatientReservations();\r\n  }, []);*/const bookAppointment=async()=>{try{const response=await fetch('/api/patients/bookappointment',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({patient_id:userId,slot_id:appointmentSlot})});const data=await response.json();if(!response.ok){throw new Error(data.message);}setReservations(data.reservations);//fetchPatientReservations();\nsetMessage('Appointment Reserved Successfully');}catch(error){console.error(error);setMessage(error.message);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"My Appointments\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Appointment Slot:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:date,onChange:e=>setAppointmentSlot(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:bookAppointment,children:\"Reserve Appointment\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:message})]});};export default PatientDashboard;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","PatientDashboard","reservations","setReservations","appointmentSlot","setAppointmentSlot","message","setMessage","userId","localStorage","getItem","bookAppointment","response","fetch","method","headers","body","JSON","stringify","patient_id","slot_id","data","json","ok","Error","error","console","children","type","value","date","onChange","e","target","onClick","className"],"sources":["C:/Users/MAS/Documents/VScode/clinicWebApp/client/src/components/PatientDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst PatientDashboard = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [appointmentSlot, setAppointmentSlot] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  /*const fetchPatientReservations = async () => {\r\n    try {\r\n      const response = await fetch(`/api/patients/${userId}/reservations`);\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error('Failed To Fetch Patient Reservations');\r\n      }\r\n      setReservations(data.reservations);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Failed To Fetch Patient Reservations');\r\n    } \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchPatientReservations();\r\n  }, []);*/\r\n\r\n  const bookAppointment = async () => {\r\n    try {\r\n      const response = await fetch('/api/patients/bookappointment', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          patient_id: userId,\r\n          slot_id: appointmentSlot,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message);\r\n      }\r\n      setReservations(data.reservations);\r\n      //fetchPatientReservations();\r\n      setMessage('Appointment Reserved Successfully');\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>My Appointments</h2>\r\n      \r\n      <div >\r\n        <label>Appointment Slot:</label>\r\n        <input type=\"number\" value={date} onChange={(e) => setAppointmentSlot(e.target.value)} />\r\n        <button onClick={bookAppointment}>Reserve Appointment</button>\r\n      </div>\r\n      {message && <p className=\"error-message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDashboard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACS,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CACzD,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAAa,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAE7C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAEE,KAAM,CAAAC,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAC5DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,UAAU,CAAEX,MAAM,CAClBY,OAAO,CAAEhB,eACX,CAAC,CACH,CAAC,CAAC,CACF,KAAM,CAAAiB,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClC,GAAI,CAACV,QAAQ,CAACW,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAACf,OAAO,CAAC,CAC/B,CACAH,eAAe,CAACkB,IAAI,CAACnB,YAAY,CAAC,CAClC;AACAK,UAAU,CAAC,mCAAmC,CAAC,CACjD,CAAE,MAAOkB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACpBlB,UAAU,CAACkB,KAAK,CAACnB,OAAO,CAAC,CAC3B,CACF,CAAC,CAED,mBACEN,KAAA,QAAA2B,QAAA,eACE7B,IAAA,OAAA6B,QAAA,CAAI,iBAAe,CAAI,CAAC,cAExB3B,KAAA,QAAA2B,QAAA,eACE7B,IAAA,UAAA6B,QAAA,CAAO,mBAAiB,CAAO,CAAC,cAChC7B,IAAA,UAAO8B,IAAI,CAAC,QAAQ,CAACC,KAAK,CAAEC,IAAK,CAACC,QAAQ,CAAGC,CAAC,EAAK3B,kBAAkB,CAAC2B,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE,CAAE,CAAC,cACzF/B,IAAA,WAAQoC,OAAO,CAAEvB,eAAgB,CAAAgB,QAAA,CAAC,qBAAmB,CAAQ,CAAC,EAC3D,CAAC,CACLrB,OAAO,eAAIR,IAAA,MAAGqC,SAAS,CAAC,eAAe,CAAAR,QAAA,CAAErB,OAAO,CAAI,CAAC,EACnD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}